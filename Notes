1. Count the number of digits in a number 
(int)Math.log10(n) + 1

2.Integer to String
Integer.toString(12)  --> "12"

3. Space Complexities
Bubble Sort - O(1)
Insertion Sort - O(1)
Merge Sort - O(n)
Quick Sort - O(log n) for stack frames recursion.

4. () exclusive brackets
   [] inclusive brackets
  
5. Arrays.sort uses quick sort for primitive types and merge sort for Objects.
Quick is not stable where as merge sort is.

6. Minimum Spanning Tree
 prim's algorithm O(E+V lgV)
 kruskal's algorithm  O(E logV).
 Kruskal can have better performance if the edges can be sorted in linear time, or are already sorted.
 Prim's better if the number of edges to vertices is high

After java7, For objects --> Tim(Merge + Insert) Sort and for primitive types --> Dual Pivot Quick Sort
