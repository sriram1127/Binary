1. Count the number of digits in a number 
(int)Math.log10(n) + 1

2.Integer to String
Integer.toString(12)  --> "12"

3. Space Complexities
Bubble Sort - O(1)
Insertion Sort - O(1)
Merge Sort - O(n)
Quick Sort - O(log n) for stack frames recursion.

4. () exclusive brackets
   [] inclusive brackets
  
5. Arrays.sort uses quick sort for primitive types and merge sort for Objects.
Quick is not stable where as merge sort is.
After java7, For objects --> Tim(Merge + Insert) Sort and for primitive types --> Dual Pivot Quick Sort

6. Minimum Spanning Tree
 1. prim's algorithm O(E+V lgV)
 2.kruskal's algorithm  O(E logV).
   Kruskal can have better performance if the edges can be sorted in linear time, or are already sorted.
   Prim's better if the number of edges to vertices is high
 3. Borůvka's algorithm
 Borůvka's algorithm is a greedy algorithm for finding a minimum spanning tree in a graph for which all edge weights are distinct,
 or a minimum spanning forest in the case of a graph that is not connected.


7. Reservoir Sampling 
It is used when n is unknown

8. Number of subsets in an array of length n is 2^n including {} empty subset.

9. Josephus problem
   n soldiers = 2^a + l (express the number in the highest power of 2) 12 = 2^3 + 4; 15 = 2^3 + 7;
   answer = 2l + 1 is the soldier wins
   
10. File Operations
File file = new File(path);
File[] files = file.listFiles();
file.isDirectory()
file.length() size in long (bytes)

11. Union Find 
Percolation problem
https://www.coursera.org/lecture/algorithms-part1/union-find-applications-OLXM8

12. B-Tree

13. Knuth-Fisher-Yates shuffle
https://stackoverflow.com/questions/1519736/random-shuffling-of-an-array

14.Langford pairing
https://en.wikipedia.org/wiki/Langford_pairing

